Description: S3 Bucket for GIC Data Access

Parameters:
  InstitutionName:
    Type: String
    Description: The short name of your institution
    Default: prototype
  ExternalId:
    Type: String
    Description: External ID to be shared with uploaders
    Default: 12345
  # 3rd party accounts can successfully assume our role, but users created by
  # that account cannot, regardless of if we add them to the trust policy
  # Hence why we're using account roots rather than iam users. 
  UploaderAccountIds:
    Type: List<String>
    Description: 'A comma delimited list of AWS account roots. Ex: arn:aws:iam::1111111111111:root,arn:aws:iam::2222222222222:root'
    Default: ''
Resources:
#-------------------------------------------------------------------------------
#                                Roles & Policies
#-------------------------------------------------------------------------------
  PicSureDataUploadPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles:
        - !Ref DataUploader
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject*
              - s3:DeleteObject*
            Resource:
              - !Sub 'arn:aws:s3:::pic-sure-data-sharing-bucket-${InstitutionName}/*'
    
  # Uploaders need PUT access to the S3 bucket, but nothing else
  # Each institution has a single uploader, tied to their PIC-SURE node
  DataUploader:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PicSureDataUploadRole
      Path: '/'
      # unit = seconds. 12 hours
      MaxSessionDuration: 43200
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              AWS: !Ref UploaderAccountIds
            Action:
              - 'sts:AssumeRole'
            Condition:
              StringEquals:
                sts:ExternalId: !Ref ExternalId
      Policies: []

  # The site owner runs a Service Workbench instance that has full access to the
  # S3 bucket
  SWBClient:
    Type: AWS::IAM::Role
    Properties:
      # unit seconds. 12 hours
      MaxSessionDuration: 43200
      RoleName: SWBDataConsumerRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              AWS: !Ref 'AWS::AccountId'
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: PicSureDataUploadPolicy 
          PolicyDocument:
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub 'arn:aws:s3:::pic-sure-data-sharing-bucket-${InstitutionName}/*'
                  - !Sub 'arn:aws:s3:::pic-sure-data-sharing-bucket-${InstitutionName}'
                Action:
                  - s3:*

#-------------------------------------------------------------------------------
#                                 Encryption Key
#-------------------------------------------------------------------------------
  BucketKey:
    Type: 'AWS::KMS::Key'
    Properties:
      Description: Symmetric encryption KMS key for bucket
      EnableKeyRotation: true
      PendingWindowInDays: 20
      KeyPolicy:
        Version: 2012-10-17
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS: !Ref UploaderAccountIds
            Action:
              - 'kms:DescribeKey'
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey'
              - 'kms:GenerateDataKeyWithoutPlaintext'
            Resource: '*'
  BucketKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/s3
      TargetKeyId:
        Ref: BucketKey

#-------------------------------------------------------------------------------
#                                Buckets & Policies
#-------------------------------------------------------------------------------
  StudyBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['-', ['pic-sure-data-sharing-bucket', !Ref InstitutionName]]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      BucketEncryption:
          ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${BucketKeyAlias}'
              SSEAlgorithm: 'aws:kms'

  StudyBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn:
      - DataUploader
      - SWBClient
      - StudyBucket
    Properties:
      Bucket: !Join ['-', ['pic-sure-data-sharing-bucket', !Ref InstitutionName]]
      PolicyDocument:
        Statement:
          - Sid: Deny requests that do not use TLS/HTTPS
            Effect: Deny
            Principal: '*'
            Action: s3:*
            Resource:
              - !Sub 'arn:aws:s3:::pic-sure-data-sharing-bucket-${InstitutionName}/*'
              - !Sub 'arn:aws:s3:::pic-sure-data-sharing-bucket-${InstitutionName}'
            Condition:
              Bool:
                aws:SecureTransport: false
          - Sid: Allow PIC-SURE clients with uploader role
            Effect: Allow
            Principal:
              AWS: 
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/PicSureDataUploadRole'
            Action:
              - s3:PutObject*
              - s3:DeleteObject*
            Resource:
              - !Sub 'arn:aws:s3:::pic-sure-data-sharing-bucket-${InstitutionName}/*'
              - !Sub 'arn:aws:s3:::pic-sure-data-sharing-bucket-${InstitutionName}'
            Condition:
              Bool:
                aws:SecureTransport: false
          - Sid: Allow SWB clients with everything role
            Effect: Allow
            Principal:
              AWS: 
              - !Sub arn:aws:iam::${AWS::AccountId}:role/SWBDataConsumerRole
            Action: s3:*
            Resource:
              - !Sub 'arn:aws:s3:::pic-sure-data-sharing-bucket-${InstitutionName}/*'
              - !Sub 'arn:aws:s3:::pic-sure-data-sharing-bucket-${InstitutionName}'
            Condition:
              Bool:
                aws:SecureTransport: false
